<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ddb96388-23eb-44cc-9456-dc4600635624" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/.mocharc.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/.npmrc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/.run/File Server (TS).run.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/.run/Play.run.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/.run/Tests (TS).run.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/app-framework/app-module.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/app-framework/i-register-api-routes.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/app-framework/i-server-app-configs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/app-framework/server-application.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/errors/argument-error.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/errors/base-error.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/errors/tests/base-error/base-error.specs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/express-utils/express-utils.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/functions.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/i-restorable.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/setup-test-modules.specs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/spies.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/stubs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/fail.specs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/adding-spies/assertSpiesAreAccessibleThroughTheIndexer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/adding-spies/assertThrowsIfUsingReservedKeyword.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/restore/assertDeletesPropertiesFromCollection.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/restore/assertRestoresNestedSpies.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/restore/assertRestoresSpies.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/spy-collection-tests-helpers.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/spy-collection/spy-collections.specs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/test-utils/tests/stubs.specs.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/modules/types/maybe.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/playground.default.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/base/tsconfig.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authentification/authentification-daos.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authentification/authentification-daos.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authentification/dao/session-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authentification/dao/session-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authentification/entities/session-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authentification/entities/session-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authentification/injector.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authentification/injector.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authentification/manager/authentification-manager.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authentification/manager/authentification-manager.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authorization/authorization-daos.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authorization/authorization-daos.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authorization/dao/authorization-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authorization/dao/authorization-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/authorization/entities/authorization-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/authorization/entities/authorization-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/image/dao/image-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/image/dao/image-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/image/dao/image-format-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/image/dao/image-format-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/image/entities/image-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/image/entities/image-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/image/entities/image-format-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/image/entities/image-format-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/image/image-daos.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/image/image-daos.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/dao/media-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/dao/media-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/dao/media-type-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/dao/media-type-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/dao/resolution-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/dao/resolution-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/dao/tags-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/dao/tags-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/entities/media-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/entities/media-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/entities/media-type-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/entities/media-type-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/entities/resolution-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/entities/resolution-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/entities/tags-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/entities/tags-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/media/media-daos.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/media/media-daos.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/user/dao/role-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/user/dao/role-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/user/dao/user-dao.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/user/dao/user-dao.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/user/entities/role-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/user/entities/role-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/user/entities/user-entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/user/entities/user-entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/module/user/user-daos.js" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/modules/user/user-daos.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authentification/authentification-daos.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authentification/dao/session-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authentification/entities/session-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authentification/injector.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authentification/manager/authentification-manager.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authorization/authorization-daos.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authorization/dao/authorization-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/authorization/entities/authorization-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/image/dao/image-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/image/dao/image-format-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/image/entities/image-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/image/entities/image-format-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/image/image-daos.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/dao/media-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/dao/media-type-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/dao/resolution-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/dao/tags-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/entities/media-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/entities/media-type-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/entities/resolution-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/entities/tags-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/media/media-daos.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/user/dao/role-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/user/dao/user-dao.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/user/entities/role-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/user/entities/user-entity.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/node_modules/module/user/user-daos.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/back-end/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/back-end/package.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="NodeModulesDirectoryManager">
    <handled-path value="$PROJECT_DIR$/back-end/node_modules" />
    <handled-path value="$PROJECT_DIR$/front-end/node_modules" />
    <handled-path value="$PROJECT_DIR$/node_modules" />
    <handled-path value="$PROJECT_DIR$/old/angular/front-end/node_modules" />
    <handled-path value="$PROJECT_DIR$/old/node_modules" />
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="-116" />
    <option name="y" value="298" />
    <option name="width" value="1936" />
    <option name="height" value="1096" />
  </component>
  <component name="ProjectId" id="1gCGGihtl3nOUNQD7nYLFxgX6oT" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/back-end/node_modules/mocha" />
    <property name="nodejs.mocha.mocha_node_package_dir" value="$PROJECT_DIR$/back-end/node_modules/mocha" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="ts.external.directory.path" value="A:\server\media-server\old\angular\front-end\node_modules\typescript\lib" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="A:\server\media-server\back-end\modules" />
    </key>
  </component>
  <component name="RunManager" selected="Mocha.core/dao/i-base-dao.js.should update a module to the database">
    <configuration default="true" type="mocha-javascript-test-runner">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory />
      <pass-parent-env>true</pass-parent-env>
      <ui />
      <extra-mocha-options />
      <test-kind>DIRECTORY</test-kind>
      <test-directory>back-end/test/**/*spec?(s).js</test-directory>
      <recursive>false</recursive>
      <method v="2" />
    </configuration>
    <configuration name="core/dao/i-base-dao.js" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>SUITE</test-kind>
      <test-file>$PROJECT_DIR$/back-end/test/integration-test/core/daos.specs.js</test-file>
      <test-names>
        <name value="core/dao/i-base-dao.js" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="core/dao/i-base-dao.js.should add/selectById/delete a module to the database" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/back-end/test/integration-test/core/daos.specs.js</test-file>
      <test-names>
        <name value="core/dao/i-base-dao.js" />
        <name value="should add/selectById/delete a module to the database" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="core/dao/i-base-dao.js.should update a module to the database" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <mocha-package>$PROJECT_DIR$/back-end/node_modules/mocha</mocha-package>
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>TEST</test-kind>
      <test-file>$PROJECT_DIR$/back-end/test/integration-test/core/daos.specs.js</test-file>
      <test-names>
        <name value="core/dao/i-base-dao.js" />
        <name value="should update a module to the database" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="test" type="mocha-javascript-test-runner">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory>$PROJECT_DIR$/back-end</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <ui>bdd</ui>
      <extra-mocha-options />
      <test-kind>DIRECTORY</test-kind>
      <test-directory>./test/**/*spec?(s).js</test-directory>
      <recursive>false</recursive>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Mocha.Tests (TS)" />
      <item itemvalue="Mocha.test" />
      <item itemvalue="Mocha.core/dao/i-base-dao.js.should add/selectById/delete a module to the database" />
      <item itemvalue="Mocha.core/dao/i-base-dao.js" />
      <item itemvalue="Mocha.core/dao/i-base-dao.js.should update a module to the database" />
      <item itemvalue="Node.js.File Server (TS)" />
      <item itemvalue="Node.js.Play" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Mocha.core/dao/i-base-dao.js.should update a module to the database" />
        <item itemvalue="Mocha.core/dao/i-base-dao.js.should add/selectById/delete a module to the database" />
        <item itemvalue="Mocha.core/dao/i-base-dao.js" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ddb96388-23eb-44cc-9456-dc4600635624" name="Default" comment="" />
      <created>1596912043679</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1596912043679</updated>
      <workItem from="1596912050827" duration="13337000" />
      <workItem from="1596988481671" duration="6194000" />
      <workItem from="1597611068240" duration="248000" />
    </task>
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 48m 01s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 48m 32s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 51m 08s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 51m 35s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 52m 17s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 52m 50s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 19h 53m 02s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 20h 07m 26s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 20h 07m 42s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
    <history-entry file="core_dao_i-base-dao_js_should_update_a_module_to_the_database - 2020.08.08 at 20h 07m 54s.xml">
      <configuration name="core/dao/i-base-dao.js.should update a module to the database" configurationId="mocha-javascript-test-runner" />
    </history-entry>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
</project>